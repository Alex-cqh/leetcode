题目描述：
    给定一个二叉树，返回它的 后序 遍历
https://leetcode-cn.com/problems/binary-tree-postorder-traversal/

//递归
class Solution{
public:
    void postorder(TreeNode* node,vector<int>& ans){
        if(!node)
            return;
        postorder(node->left,ans);
        postorder(node->right,ans);
        ans.push_back(node->val);
    }
    vector<int> postorderTraversal(TreeNode* root){
        vector<int> ans;
        postorder(root,ans);
        return ans;
    }
};

//递归2
class Solution{
public:
    vector<int> order;
    vector<int> postorderTraversal(TreeNode* root){
        if(!root)
            return order;
        postorderTraversal(root->left);
        postorderTraversal(root->right);
        order.push_back(root->val);
        return order;
    }
};

//迭代――利用辅助栈
//先输出后序遍历(左右根)的逆序序列(根左右)到栈中,最后弹到vector中
class Solution{
public:
    vector<int> postorderTraversal(TreeNode* root){
        stack<TreeNode *> st1;
        stack<int> st2;
        vector<int> ans;
        while(root!=nullptr||!st1.empty()){
            while(root!=nullptr){
                st1.push(root);
                st2.push(root->val);
                root=root->right;
            }
            root=st1.top();
            st1.pop();
            root=root->left;
        }
        while(!st2.empty()){
            ans.push_back(st2.top());
            st2.pop();
        }
        return ans;
    }
};